{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsWithId","map","good","name","id","self","crypto","randomUUID","SORT_VALUE_NAME","SORT_VALUE_LENGTH","Good","GoodsList","visibleGoods","App","useState","sortValue","setSortValue","reverse","setReverse","goods","sortField","preperedGoods","sort","good2","localeCompare","getPreperedGoods","className","type","cn","button","onClick","ReactDOM","render","document","getElementById"],"mappings":"uPAgCMA,EAbyB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGgDC,KAAI,SAAAC,GAAI,MACxD,CACEC,KAAMD,EAENE,GAAIC,KAAKC,OAAOC,iBAIdC,EAAkB,OAClBC,EAAoB,SA6B1B,IAAMC,EAA+B,SAAC,GAAD,IAAGR,EAAH,EAAGA,KAAH,OACnC,oBAAI,UAAQ,OAAZ,SACGA,EAAKC,QAIJQ,EAAyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAC7C,6BACGA,EAAaX,KAAI,SAAAC,GAAI,OACpB,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKE,UAKrBS,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMN,EA5CR,SACEO,EACAC,EACAH,GAEA,IAAMI,EAAa,YAAOF,GAmB1B,OAjBAE,EAAcC,MAAK,SAACpB,EAAMqB,GACxB,OAAQH,GACN,KAAKZ,EACH,OAAON,EAAI,KAAkBsB,cAAcD,EAAK,MAElD,KAAKd,EACH,OAAOP,EAAKC,KAAL,OAA+BoB,EAAMpB,KAAN,OAExC,QACE,OAAO,MAITc,GACFI,EAAcJ,UAGTI,EAoBcI,CAAiBzB,EAAae,EAAWE,GAO9D,OACE,sBAAKS,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CACZC,QAAQ,EACR,WAAW,EACX,WAAYd,IAAcP,IAE5BsB,QAAS,kBAAMd,EAAaR,IAP9B,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,CACZC,QAAQ,EACR,cAAc,EACd,WAAYd,IAAcN,IAE5BqB,QAAS,kBAAMd,EAAaP,IAP9B,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,CACZC,QAAQ,EACR,cAAc,EACd,YAAaZ,IAEfa,QAAS,kBAAMZ,GAAYD,IAP7B,sBAYEF,GAAaE,IAEX,wBACEU,KAAK,SACLD,UAAWE,IAAG,CACZC,QAAQ,EACR,aAAa,EACb,YAAY,IAEdC,QArDZ,WACEZ,GAAW,GACXF,EAAa,KA4CL,sBAcN,cAAC,EAAD,CAAWJ,aAAcA,QClJ/BmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fb17416f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport cn from 'classnames';\n\ninterface GoodWithID {\n  name: string;\n  id: string;\n}\n\ntype PropsForGoodsList = {\n  visibleGoods: GoodWithID[];\n};\n\ntype PropsForGood = {\n  good: GoodWithID;\n};\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goodsWithId: GoodWithID[] = goodsFromServer.map(good => (\n  {\n    name: good,\n    // eslint-disable-next-line\n    id: self.crypto.randomUUID(),\n  }\n));\n\nconst SORT_VALUE_NAME = 'name';\nconst SORT_VALUE_LENGTH = 'length';\n\nfunction getPreperedGoods(\n  goods: GoodWithID[],\n  sortField: string,\n  reverse: boolean,\n) {\n  const preperedGoods = [...goods];\n\n  preperedGoods.sort((good, good2) => {\n    switch (sortField) {\n      case SORT_VALUE_NAME:\n        return good[SORT_VALUE_NAME].localeCompare(good2[SORT_VALUE_NAME]);\n\n      case SORT_VALUE_LENGTH:\n        return good.name[SORT_VALUE_LENGTH] - good2.name[SORT_VALUE_LENGTH];\n\n      default:\n        return 0;\n    }\n  });\n\n  if (reverse) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nconst Good: React.FC<PropsForGood> = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good.name}\n  </li>\n);\n\nconst GoodsList: React.FC<PropsForGoodsList> = ({ visibleGoods }) => (\n  <ul>\n    {visibleGoods.map(good => (\n      <Good good={good} key={good.id} />\n    ))}\n  </ul>\n);\n\nexport const App: React.FC = () => {\n  const [sortValue, setSortValue] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = getPreperedGoods(goodsWithId, sortValue, reverse);\n\n  function reset() {\n    setReverse(false);\n    setSortValue('');\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn({\n            button: true,\n            'is-info': true,\n            'is-light': sortValue !== SORT_VALUE_NAME,\n          })}\n          onClick={() => setSortValue(SORT_VALUE_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            button: true,\n            'is-success': true,\n            'is-light': sortValue !== SORT_VALUE_LENGTH,\n          })}\n          onClick={() => setSortValue(SORT_VALUE_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            button: true,\n            'is-warning': true,\n            'is-light': !reverse,\n          })}\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortValue || reverse)\n          && (\n            <button\n              type=\"button\"\n              className={cn({\n                button: true,\n                'is-danger': true,\n                'is-light': true,\n              })}\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <GoodsList visibleGoods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}